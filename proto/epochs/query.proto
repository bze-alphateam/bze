syntax = "proto3";
package bze.epochs.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "epochs/genesis.proto";

option go_package = "github.com/bze-alphateam/bze/x/epochs/types";

// Query defines the gRPC querier service.
service Query {
  // EpochInfos provide running epochInfos
  rpc EpochInfos(QueryEpochsInfoRequest) returns (QueryEpochsInfoResponse) {
    option (google.api.http).get = "/bze/epochs/v1/epochs";
  }
  // CurrentEpoch provide current epoch of specified identifier
  rpc CurrentEpoch(QueryCurrentEpochRequest)
      returns (QueryCurrentEpochResponse) {
    option (google.api.http).get = "/bze/epochs/v1/current_epoch";
  }
}

message QueryEpochsInfoRequest {}
message QueryEpochsInfoResponse {
  repeated EpochInfo epochs = 1 [ (gogoproto.nullable) = false ];
}

message QueryCurrentEpochRequest { string identifier = 1; }
message QueryCurrentEpochResponse { int64 current_epoch = 1; }